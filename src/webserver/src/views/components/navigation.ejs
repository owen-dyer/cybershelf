<header class="bg-white relative">
  <div class="flex justify-between">
    <div
      class="w-full sm:w-fit flex justify-between sm:justify-start gap-x-6 py-4"
    >
      <div class="flex justify-start gap-x-6">
        <div class="flex flex-shrink-0 items-center">
          <h1 class="text-xl font-semibold text-blue-600">
            <a href="/">CyberShelf</a>
          </h1>
        </div>
        <div class="flex items-center gap-x-8">
          <button
            id="categories"
            class="text-gray-900 text-lg flex gap-x-2 items-center"
            popovertarget="categories-popover"
          >
            Categories
            <span id="categories-chevron" class="transition transform">
              <svg
                xmlns="http://www.w3.org/2000/svg"
                height="0.5rem"
                viewBox="0 0 512 512"
                class="-rotate-90"
              >
                <path
                  d="M233.4 406.6c12.5 12.5 32.8 12.5 45.3 0l192-192c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L256 338.7 86.6 169.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3l192 192z"
                />
              </svg>
            </span>
          </button>
        </div>
      </div>
      <div class="flex items-center sm:hidden">
        <!-- <button
          id="mobile-menu-toggle"
          class="flex justify-center items-center"
          popovertarget="mobile-menu"
          onclick="setMobileMenuState(!mobileMenuState);"
        >
          <svg
            xmlns="http://www.w3.org/2000/svg"
            height="1.0rem"
            viewBox="0 0 448 512"
            id="mobile-menu-open"
          >
            <path
              d="M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z"
            />
          </svg>
          <svg
            xmlns="http://www.w3.org/2000/svg"
            height="1.0rem"
            viewBox="0 0 384 512"
            id="mobile-menu-close"
            class="hidden"
          >
            <path
              d="M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z"
            />
          </svg>
        </button> -->
      </div>
    </div>
    <div class="hidden sm:flex items-center gap-x-6">
      <%- include ('../components/search') %>
      <!-- If user is authenticated render the account settings/profile menu -->
      <% if (locals.authenticated) { %>
      <button
        id="account-menu-select"
        class="bg-white text-gray-800 text-lg <%= locals.authenticated ? 'block' : 'hidden' %>"
        popovertarget="account-menu"
      >
        Welcome, <%= locals.name %>
      </button>
      <%- include ('../components/popover', {popover_id: "account-menu",
      position: "attached"}) %> <% } %>
      <button
        id="show-signin-form"
        class="bg-blue-600 text-gray-100 rounded-md text-lg px-4 py-1.5 <%= locals.authenticated ? 'hidden' : 'block' %>"
        onclick="renderRemoteContent('/login', 'modal-content')"
      >
        Sign In
      </button>
    </div>
  </div>
  <%- include ('../components/popover', {popover_id: "categories-popover"}) %>
  <%- include ('../components/popover', {popover_id: "mobile-menu"}) %> <%-
  include ('../components/modal') %>
</header>
<!-- TODO: Add basic functionality to modal and make universal so any content can be inserted into it -->

<!-- TODO: Move these scripts into their own files and finish them -->
<!-- <script>
  // This needs to be finished
  const mobileMenuOpen = document.getElementById("mobile-menu-open");
  const mobileMenuClose = document.getElementById("mobile-menu-close");

  var mobileMenuState = false;
  const setMobileMenuState = (menuState) => {
    mobileMenuState = menuState;
    mobileMenuOpen.classList.toggle("hidden", mobileMenuState);
    mobileMenuClose.classList.toggle("hidden", !mobileMenuState);
  };
</script> -->
