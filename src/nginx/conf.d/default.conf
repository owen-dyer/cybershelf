# NOTE: This would be used in place of the 3 requests to the account server for the public key
# Only one request would be necessary and then the key could be cached
# js_shared_dict_zone zone=apk:1M timeout=60s;

server {
    js_path "/etc/nginx/njs/";
    js_import set_public_keys.js;

    listen 80; # Assigns the port that the proxy will listen on (http://localhost:port)
    listen [::]:80;
    server_name localhost; # Assigns the name of the server (localhost in this case, it could be anything though if we configured the DNS)

    # Route for all webserver files
    location / {
        try_files false @webserver;
    }

    # This allows the client to get static files (css, js, html, etc.) from the proxy (so that the proxy doesn't have to make a request to each service to get the files)
    # FIXME: Don't really need this since now the only route on this server goes to the webserver
    location /static/ {
        try_files $uri @webserver;
    }

    location @webserver {
        resolver 127.0.0.11 valid=10s;
        set $webserver webserver:3000;
        proxy_pass http://$webserver;
    }

    location /api/register {
        try_files false @account;
    }
    
    location /api/signin {
        try_files false @account;
    }

    location /api/account {
        try_files false @account;
    }

    location @account {
        resolver 127.0.0.11 valid=10s;
        set $account_server account_server:3000;
        proxy_pass http://$account_server;
    }

    location /api/categories {
        try_files false @inventory;
    }

    location /api/listings {
        try_files false @inventory;
    }

    location @inventory {
        resolver 127.0.0.11 valid=10s;
        set $inventory_server inventory_server:3000;
        proxy_pass http://$inventory_server;
    }

    location /api/cart {
        try_files false @cart;
    }

    location @cart {
        resolver 127.0.0.11 valid=10s;
        set $cart_server cart_server:3000;
        proxy_pass http://$cart_server;
    }

    location /api/orders {
        resolver 127.0.0.11 valid=10s;
        set $order_server order_server:3000;
        proxy_pass http://$order_server;
    }

    # Automatically call this/these function periodically
    location @periodics {
        resolver 127.0.0.11;
        # Change interval to send public key to servers more/less frequently
        js_periodic set_public_keys.webserverPublicKey interval=5s;
        js_periodic set_public_keys.cartServerPublicKey interval=5s;
        js_periodic set_public_keys.orderServerPublicKey interval=5s;
    }
}

